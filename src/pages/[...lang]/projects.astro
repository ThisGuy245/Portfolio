---
import Nav from '../../components/Nav.astro';
import Layout from '../../layouts/Layout.astro';
import ProjectCard from '../../components/ProjectCard.astro';
import { languages } from '../../i18n/ui';
import { getLangFromUrl, translate, useTranslations } from '../../i18n/utils';

// Static paths for localization
export async function getStaticPaths() {
    return languages.map(lang => ({ params: { lang: lang.key } }));
}

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Example projects data (replace with dynamic data source if needed)
const projects = [
    {
        title: 'Unity Game Project',
        body: 'A thrilling action-adventure game developed using Unity. Explore vast worlds and engage in epic battles.',
        href: '#',
        videoSrc: 'https://www.youtube.com/embed/ScMzIvxBSi4',
        placeholderImg: '/path/to/placeholder.jpg',
        category: 'Games'
    },
    {
        title: 'SDL2 Game Demo',
        body: 'A classic 2D platformer built with SDL2. Experience the nostalgia of retro gaming with modern enhancements.',
        href: '#',
        videoSrc: 'https://www.youtube.com/embed/ScMzIvxBSi4',
        placeholderImg: '/path/to/placeholder.jpg',
        category: 'Games'
    },
    {
        title: 'Personal Portfolio Website',
        body: 'A personal website showcasing my work and projects. Built using modern web technologies.',
        href: '#',
        placeholderImg: '/media/Portfolio.jpg',
        category: 'Web'
    },
    {
        title: 'Father Shea OST',
        body: 'An app that allows users to stream and discover new music. Built with a focus on user experience.',
        href: '#',
        placeholderImg: '/path/to/music-placeholder.jpg',
        category: 'Music'
    }
];

// Categorizing projects by type (Games, Web, Music, etc.)
function categorizeProjects(projects) {
    const categories = projects.reduce((acc, project) => {
        const { category } = project;
        if (!acc[category]) {
            acc[category] = [];
        }
        acc[category].push(project);
        return acc;
    }, {});
    return categories;
}

const categorizedProjects = categorizeProjects(projects);

// Filter functionality
let selectedCategory = 'All';

function filterProjects(category) {
    selectedCategory = category;
    if (category === 'All') {
        return projects;
    } else {
        return projects.filter(project => project.category === category);
    }
}

let filteredProjects = filterProjects(selectedCategory);
---

<Layout title={t('My Portfolio')}>
    <Nav lang={lang} />
    <main>
        <header>
            <h1>{t('My Portfolio')}</h1>
        </header>

        <!-- About Section -->
        <section id="about">
            <h2>{t('About Me')}</h2>
            <p>{t('I am a passionate game software engineer with experience in creating immersive gaming experiences. Specializing in game development and design, I enjoy bringing virtual worlds to life.')}</p>
        </section>

        <!-- Filter Buttons -->
        <section id="filters">
            <button onClick={() => filteredProjects = filterProjects('All')}>All</button>
            <button onClick={() => filteredProjects = filterProjects('Web')}>Web</button>
            <button onClick={() => filteredProjects = filterProjects('Games')}>Games</button>
            <button onClick={() => filteredProjects = filterProjects('Music')}>Music</button>
        </section>

        <!-- Projects Section -->
        <section id="projects">
            <h2>{t('Projects')}</h2>
            {Object.entries(categorizeProjects(filteredProjects)).map(([category, projects]) => (
                    <div key={category}>
                        <h3 class="category-header">{category}</h3>
                        <ul class="project-cards">
                            {projects.map(project => (
                                    <ProjectCard project={project} />
                            ))}
                        </ul>
                    </div>
            ))}
        </section>
    </main>
</Layout>

<style>
    /* Stylizing the category header */
    .category-header {
        font-size: 2rem;
        font-weight: bold;
        text-align: center;
        color: var(--accent-color);
        margin: 2rem 0;
        position: relative;
    }

    .category-header::after {
        content: '';
        display: block;
        width: 50%;
        height: 2px;
        background-color: var(--accent-color);
        margin: 0.5rem auto 0;
    }

    /* Project Cards: Fixed sizes */
    .project-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, 300px); /* Fixed card size */
        justify-content: center; /* Center the cards in the grid */
        gap: 1.5rem;
        list-style: none;
        padding: 0;
    }

    /* Filter Buttons Styling */
    #filters {
        display: flex;
        justify-content: center;
        margin: 2rem 0;
    }

    #filters button {
        background-color: var(--button-bg);
        color: var(--button-text);
        border: none;
        padding: 0.75rem 1.5rem;
        margin: 0 0.5rem;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    #filters button:hover {
        background-color: var(--button-hover-bg);
    }

    /* Responsive behavior is still intact */
    @media (min-width: 768px) {
        .project-cards {
            grid-template-columns: repeat(auto-fit, 300px);
        }
    }

    @media (min-width: 1024px) {
        .project-cards {
            grid-template-columns: repeat(auto-fit, 300px);
        }
    }
</style>
